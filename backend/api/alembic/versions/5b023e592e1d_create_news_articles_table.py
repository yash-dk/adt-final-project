"""create news articles table

Revision ID: 5b023e592e1d
Revises: 
Create Date: 2025-05-04 20:06:22.928140

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5b023e592e1d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('major_holders')
    op.drop_table('insider_transactions')
    op.drop_table('analyst_recommendations')
    op.drop_table('institutional_holders')
    op.drop_table('mutualfund_holders')
    op.add_column('news_articles', sa.Column('summary', sa.Text(), nullable=True))
    op.drop_constraint('stocks_symbol_key', 'stocks', type_='unique')
    op.create_index(op.f('ix_stocks_id'), 'stocks', ['id'], unique=False)
    op.create_index(op.f('ix_stocks_symbol'), 'stocks', ['symbol'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stocks_symbol'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_id'), table_name='stocks')
    op.create_unique_constraint('stocks_symbol_key', 'stocks', ['symbol'])
    op.drop_column('news_articles', 'summary')
    op.create_table('mutualfund_holders',
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('holders', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name='mutualfund_holders_stock_id_fkey'),
    sa.PrimaryKeyConstraint('stock_id', 'date', name='mutualfund_holders_pkey')
    )
    op.create_table('institutional_holders',
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('holders', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name='institutional_holders_stock_id_fkey'),
    sa.PrimaryKeyConstraint('stock_id', 'date', name='institutional_holders_pkey')
    )
    op.create_table('analyst_recommendations',
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rec_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('strong_buy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('buy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hold', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sell', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('strong_sell', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name='analyst_recommendations_stock_id_fkey'),
    sa.PrimaryKeyConstraint('stock_id', 'rec_date', name='analyst_recommendations_pkey')
    )
    op.create_table('insider_transactions',
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('owners', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name='insider_transactions_stock_id_fkey')
    )
    op.create_table('major_holders',
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('holders', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name='major_holders_stock_id_fkey'),
    sa.PrimaryKeyConstraint('stock_id', 'date', name='major_holders_pkey')
    )
    # ### end Alembic commands ###
